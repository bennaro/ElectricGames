{"version":3,"sources":["services/GameService.ts","services/QuizService.ts","contexts/GameContext.tsx","components/quiz/QuizItem.tsx","components/quiz/QuizList.tsx","pages/HomePage.tsx","services/ImageUploadService.ts","components/games/AddNewGame.tsx","components/games/GameItem.tsx","components/games/GameList.tsx","pages/games/DashBoard.tsx","components/games/UpdateGame.tsx","pages/games/UpdateGamePage.tsx","components/games/SearchGameByName.tsx","pages/games/ShowGameByNamePage.tsx","components/games/DeleteGame.tsx","pages/games/DeleteGamePage.tsx","services/CharacterService.ts","contexts/CharacterContext.tsx","components/gameCharacters/AddNewCharacter.tsx","components/gameCharacters/CharacterItem.tsx","components/gameCharacters/CharacterList.tsx","pages/characters/AddAndSeeAllCharacterPage.tsx","components/gameCharacters/DeleteCharacter.tsx","pages/characters/DeleteCharacterPage.tsx","components/gameCharacters/SearchCharacterByName.tsx","pages/characters/ShowCharacterByNamePage.tsx","components/gameCharacters/UpdateCharacter.tsx","pages/characters/UpdateCharacterPage.tsx","services/ConsolesService.ts","contexts/ConsoleContext.tsx","components/consoles/AddNewConsole.tsx","components/consoles/ConsoleItem.tsx","components/consoles/ConsoleListe.tsx","components/consoles/DeleteConsole.tsx","components/consoles/SearchConsoleByName.tsx","components/consoles/SearchConsolePriceRange.tsx","components/consoles/UpdateConsole.tsx","pages/index.tsx","pages/consoles/AddNewAndSeeAllConsolesPage.tsx","pages/consoles/DeleteConsolePage.tsx","pages/consoles/ShowConsoleByNamePage.tsx","pages/consoles/ShowConsoleByPriceRangePage.tsx","pages/consoles/UpdateConsolePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GameService","gameEndpoints","getAllGames","async","result","axios","get","console","log","data","getGameByName","concat","name","getGameById","id","postGame","post","g","putGame","put","deleteGame","delete","QuizService","getAllQuizes","GameContext","createContext","GameProvider","_ref","children","quizArray","setQuizArray","useState","gameArray","setGame","useEffect","getAllQuiz","length","allGamesFromDb","getAllFromQuiz","React","createElement","Provider","value","addGame","game","deleteGameById","newGameArray","filter","QuizItem","answerFour","answerOne","answerThree","answerTwo","correctAnswer","question","showAnswer","setShowAnswer","showCorrectAnswer","setCorrectAnswer","quizQuestion","isCorrect","alert","className","onClick","e","currentTarget","addEventListener","QuizList","useContext","map","quiz","i","key","HomePage","ImageUploadService","uploadImage","formData","FormData","append","image","url","method","headers","Content-Type","AddNewGame","setImage","newGame","setNewGame","gameName","gameGenre","gamePlatform","gamePrice","gameReleaseYear","gameImage","gameObjecthandler","target","[object Object]","onChange","type","files","file","addNewGameHandler","GameItem","src","GameList","games","DashBoard","UpdateGame","setId","setName","setGenre","setPlatform","setPrice","setReleaseYear","gameImageFileName","setFileName","changeHandler","parseInt","editGame","UpdateGamePage","SearchGameByName","gameElement","useRef","ref","current","gamesElement","chosenGame","ShowGameByNamePage","DeleteGame","DeleteGamePage","CharacterService","characterEndpoints","getAllCharacters","getCharacterByName","getCharacterById","postCharacter","putCharacter","deleteCharacter","CharacterContext","CharacterProvider","characterArray","setCharacter","allCharacters","addCharacter","character","deleteCharacterById","newCharacterArray","AddNewCharacter","newCharacter","setNewCharacter","characterName","characterGame","characterAge","characterImage","characterObjecthandler","addNewCharacterHandler","CharacterItem","CharacterList","characters","AddAndSeeAllCharacterPage","DeleteCharacter","DeleteCharacterPage","SearchCharacterByName","characterNameElement","chosenCharacter","ShowCharacterByNamePage","UpdateCharacter","setAge","characterImageFileName","editCharacter","UpdateCharacterPage","ConsolesService","consoleEndpoints","getAllConsoles","getConsoleByName","getConsoleByPriceRange","minPrice","maxPrice","getConsoleById","postConsole","c","putConsole","deleteConsole","ConsoleContext","ConsoleProvider","consoleArray","setConsole","allConsoles","addConsole","deleteConsoleById","newConsoleArray","AddNewConsole","newConsole","setNewConsole","consoleName","consolePrice","consoleImage","consoleObjecthandler","addNewConsoleHandler","ConsoleItem","ConsoleList","consoles","DeleteConsole","SearchConsoleByName","consoleNameElement","chosenConsole","SearchConsolePriceRange","setConsoles","consolePriceElementOne","consolePriceElementTwo","characterNameT","consolesInPriceRange","UpdateConsole","consoleImageFileName","editConsole","allPages","AddAndSeeAllConsolesPage","DeleteConsolePage","ShowConsoleByNamePage","ShowConsoleByPriceRangePage","UpdateConsolePage","App","Fragment","BrowserRouter","Link","to","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.aabe70b9.chunk.js","sourcesContent":["import axios from 'axios';\nimport IGame from '../interfaces/IGame';\n\nconst GameService = (\n  () => {\n\n    const gameEndpoints = {\n      games: \"https://localhost:7226/Game\",\n      gameByName: \"https://localhost:7226/Game/GetByName?nameFromDb\"\n    }\n\n    const getAllGames = async () => {\n      const result = await axios.get(gameEndpoints.games);\n      console.log(result.data);\n      return result.data;\n    }\n\n    const getGameById = async(id: number) => {\n      const result = await axios.get(`${gameEndpoints.games}/${id}`);\n      return result.data;\n    }\n\n    const getGameByName = async(name: string) => {\n      const result = await axios.get(`${gameEndpoints.gameByName}=${name}`);\n      return result.data;\n    }\n\n    const postGame = async (g: IGame) => {\n        const result = await axios.post(gameEndpoints.games, g);\n        console.log(result);\n        \n    }\n\n    const putGame = async (g: IGame) => {\n      const result = await axios.put(gameEndpoints.games, g);\n      return result.data;\n    }\n\n    const deleteGame = async (id: number) => {\n      const result = await axios.delete(`${gameEndpoints.games}/${id}`)\n      console.log(result);\n      return result;\n    }\n\n    return {\n      getAllGames,\n      getGameByName,\n      getGameById,\n      postGame,\n      putGame,\n      deleteGame\n    }\n\n  }\n)();\n\nexport default GameService;","import axios from 'axios';\n\nconst QuizService = (\n  () => {\n\n    const quizEndpoint = \"https://localhost:7226/quiz\"\n    \n\n    const getAllQuizes = async () => {\n      const result = await axios.get(quizEndpoint);\n      console.log(result.data);\n      return result.data;\n    }\n\n\n\n    return {\n      getAllQuizes\n    }\n\n  }\n)();\n\nexport default QuizService;","import { useState, createContext, FC, ReactNode, useEffect, useRef } from \"react\";\nimport React from \"react\";\nimport IGame from \"../interfaces/IGame\";\nimport IQuiz from \"../interfaces/IQuiz\";\nimport IGameContext from \"../interfaces/IGameContext\";\nimport GameService from \"../services/GameService\";\nimport QuizService from \"../services/QuizService\";\n\nexport const GameContext = createContext<IGameContext | null>(null)\n\ninterface Props{\n    children: ReactNode,\n}\n\nexport const GameProvider : FC<Props> = ({children}) => {\n\n  const [quizArray, setQuizArray] = useState<IQuiz[]>([]);\n\n  const [gameArray, setGame] = useState<IGame[]>([]);\n\n  useEffect(\n    ()=>{\n        getAllGames();\n        getAllQuiz();\n    }, [gameArray.length]\n  )\n\n  const getAllGames = async() => {\n    const allGamesFromDb = await GameService.getAllGames();\n    setGame(allGamesFromDb);\n  }\n\n  const getGameById = async(id: number) => {\n    var game = await GameService.getGameById(id); \n  }\n\n  const getGameByName = async(name: string) => {\n    const getGameByName = await GameService.getGameByName(name);\n  }\n\n  const getAllQuiz = async() => {\n    const getAllFromQuiz = await QuizService.getAllQuizes();\n    setQuizArray(getAllFromQuiz);\n  }\n\n  const addGame = async (game: IGame) => {\n    setGame( [ game, ...gameArray ] );\n    await GameService.postGame(game);\n  }\n\n  const putGame = async (game: IGame) => {\n    setGame( [game, ...gameArray] );\n    await GameService.putGame(game)\n  }\n\n  const deleteGameById = async (id: number) => {\n    await GameService.deleteGame(id);\n    const newGameArray = gameArray.filter(game => game.id !== id);\n    setGame(newGameArray);\n  }\n\n  return(\n    <GameContext.Provider value={{gameArray, quizArray, addGame, putGame, getGameByName, deleteGameById}}>\n        {children}\n    </GameContext.Provider>\n  )\n}","import React, { FC, useState, ChangeEvent,useRef } from \"react\";\nimport IQuiz from \"../../interfaces/IQuiz\";\nimport \"../../css/Quiz.css\";\n\nconst QuizItem: FC<IQuiz> = ({\n  id,\n  answerFour,\n  answerOne,\n  answerThree,\n  answerTwo,\n  correctAnswer,\n  question,\n}) => {\n  const [showAnswer, setShowAnswer] = useState<Boolean>(false);\n  const [showCorrectAnswer, setCorrectAnswer] = useState<Boolean>(false);\n\n\n\n  const quizQuestion = (isCorrect:string) => {\n    if( isCorrect == correctAnswer ){\n      setCorrectAnswer(true)\n  }else\n  {\n    alert(\"wrong\")\n  }\n  }\n\n  return (\n    \n    \n    <div className=\"App col-xl-6 col-md-12 quiz-margin\">\n\n      {showAnswer ? (\n        <div className=\"final-results\">\n          <h1>Final results</h1>\n          <h2>1 out of 5 correct</h2>\n          <button className=\"button\">Restart game</button>\n        </div>\n      ) : (\n        <div className=\"question-card\">\n            <h2 className=\"h1\">Question : {id} out of 5 </h2>\n          <h3 className=\"text question-text games-h1\">\n             {question}\n          </h3>\n\n          \n            <p onClick={ (e) => e.currentTarget.addEventListener(\"click\", () => quizQuestion(answerOne)) }   className=\" li\"> {answerOne}</p>\n            <p onClick={ (e) => e.currentTarget.addEventListener(\"click\", () => quizQuestion(answerTwo))}   className=\" li\">{answerTwo}</p>\n            <p onClick={(e) => e.currentTarget.addEventListener(\"click\", () => quizQuestion(answerThree))}    className=\" li\">{answerThree}</p>\n            <p onClick={ (e) => e.currentTarget.addEventListener(\"click\", () => quizQuestion(answerFour))}    className=\" li\">{answerFour}</p>\n          \n          { showCorrectAnswer && (<p className=\"h1\">Correct answer: {correctAnswer} </p>)}\n        </div>\n      )}\n    </div>\n\n    \n  );\n};\n\nexport default QuizItem;\n","\nimport React, { useContext } from \"react\";\nimport { GameContext } from \"../../contexts/GameContext\";\nimport IGameContext from \"../../interfaces/IGameContext\";\nimport IQuiz from \"../../interfaces/IQuiz\";\nimport QuizItem from \"./QuizItem\";\n\nconst QuizList = () => {\n\n    const { quizArray } = useContext(GameContext) as IGameContext;\n\n    const getQuizItems = () => {\n        return quizArray.map( (quiz, i) => (\n            <QuizItem\n              key={`quiz-${i}`}\n                answerOne={quiz.answerOne}\n                answerTwo={quiz.answerTwo}\n                answerThree={quiz.answerThree}\n                answerFour={quiz.answerFour}\n                correctAnswer={quiz.correctAnswer}\n                id={quiz.id}\n                question={quiz.question}\n            />\n        ) );\n    }\n\n    return (\n        <section className=\"margin\">\n            <h3 className=\"h1\">Quiz game</h3>\n            <section className=\"text row\">\n                { getQuizItems()}\n            </section>            \n        </section>\n    )\n}\n\nexport default QuizList;","import QuizList from \"../components/quiz/QuizList\";\nimport React from \"react\";\n\nconst HomePage = () => {\n  return (\n      <section>\n          <QuizList/>\n      </section>\n  )\n}\n\nexport default HomePage;","import axios from \"axios\";\n\nconst ImageUploadService = (\n    ()=>{\n\n        const testEndpoints = \"https://localhost:7226/uploadimage\";\n\n\n        const uploadImage = async (image: File) => {\n\n            const formData = new FormData();\n            formData.append(\"file\", image) \n\n            const result = await axios({\n                url: testEndpoints,\n                method: \"POST\",\n                data: formData,\n                headers: { \"Content-Type\": \"multipart/form-data\" }\n            }); \n\n            formData.delete(\"file\");\n\n        }\n\n        return{\n            uploadImage,\n        }\n\n    }\n)();\n\nexport default ImageUploadService;","import React, { useState, useContext, ChangeEvent } from \"react\";\nimport { GameContext } from \"../../contexts/GameContext\";\nimport IGame from \"../../interfaces/IGame\";\nimport IGameContext from \"../../interfaces/IGameContext\";\nimport ImageUploadService from \"../../services/ImageUploadService\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../../css/Test.css\"\n\n\nconst AddNewGame = () => {\n\n    const { addGame } = useContext(GameContext) as IGameContext;\n\n    const [image, setImage] = useState<File | null>(null);\n\n    const [newGame, setNewGame] = useState<IGame>({\n        gameName: \"\",\n        gameGenre: \"\",\n        gamePlatform: \"\",\n        gamePrice: 0,\n        gameReleaseYear: 0,\n        gameImage: \"\"\n    });\n\n\n    const gameObjecthandler = (e: { target: { name: any; value: any; }; }) => {\n        const {name, value} = e.target;\n        setNewGame({...newGame,[name]: value});\n    }\n\n\n    const imageHandler = (e: ChangeEvent<HTMLInputElement> ) => {\n        const {files} = e.target; \n          if(files!=null){ \n            const file = files[0];\n            setImage(file);\n\n            newGame.gameImage = file.name\n\n\n          }\n        \n      }\n\n    \n    const addNewGameHandler = () => {\n\n        if(newGame != null && image != null){\n            addGame(newGame); \n            ImageUploadService.uploadImage(image);\n        }\n      alert(\"Added new game\")\n\n    }\n\n    return (\n      <section className=\"margin\">\n          <h3 className=\"h1\">Add a new game</h3>\n          <div className=\"container\">\n            <div className=\"row\">\n                <div>\n              <label className=\"col-2 margin-new-game\">Name</label>\n              <input className=\"col-5 margin-new-game\" name=\"gameName\" onChange={gameObjecthandler} type=\"text\" />\n              </div>\n\n              <div>\n              <label className=\"col-2 margin-new-game\">Genre</label>\n              <input className=\"col-5 margin-new-game\" name=\"gameGenre\" onChange={gameObjecthandler} type=\"text\" />\n              </div>\n\n              <div>\n              <label className=\"col-2 margin-new-game\">Platform</label>\n              <input className=\"col-5 margin-new-game\" name=\"gamePlatform\" onChange={gameObjecthandler} type=\"text\" />\n              </div>\n\n              <div>\n              <label className=\"col-2 margin-new-game\">Price</label>\n              <input className=\"col-5 margin-new-game\" name=\"gamePrice\" onChange={gameObjecthandler} type=\"number\" />\n              </div>\n              \n              <div>\n              <label className=\"col-2 margin-new-game\">Release Year</label>\n              <input className=\"col-5 margin-new-game\" name=\"gameReleaseYear\" onChange={gameObjecthandler} type=\"number\" />\n              </div>\n            \n              <div>\n              <label className=\"col-2 margin-new-game\">Image</label>\n              <input className=\"col-5 margin-new-game text\" name=\"gameImage\" onChange={imageHandler} type=\"file\" />\n              </div>\n              <button className=\"col-lg-1 col-3 button margin2\" onClick={addNewGameHandler}>Add</button>\n          </div>\n          </div>\n          \n      </section>\n    )\n}\n\nexport default AddNewGame;","import { FC } from 'react';\nimport IGame from '../../interfaces/IGame';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Test.css';\nimport React from \"react\";\nconst GameItem : FC<IGame> = ({id, gameName, gameGenre, gamePlatform, gamePrice, gameReleaseYear, gameImage}) => {\n    return (\n            <article className='games-box margin col-10 col-sm-4 col-lg-3'>\n                <h3 className='games-h1'>{id}: {gameName}</h3>\n                <p className='text'>Genre: {gameGenre}</p>\n                <p className='text'>Platform: {gamePlatform}</p>\n                <p className='text'>Release year: {gameReleaseYear}</p>\n                <p className='text'>Price: {gamePrice}</p>\n                <img className='width-height' src={`https://localhost:7226/images/${gameImage}`}/>\n            </article>\n)}\n\nexport default GameItem;","import React, { useContext } from \"react\";\nimport { GameContext } from \"../../contexts/GameContext\";\nimport IGameContext from \"../../interfaces/IGameContext\";\nimport GameItem from \"./GameItem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst GameList = () => {\n\n    const { gameArray } = useContext(GameContext) as IGameContext;\n\n    const getGameItems = () => {\n        return gameArray.map( (games, i)  => (\n            <GameItem\n              key={`game-${i}`}\n              id={games.id}\n              gameName={games.gameName}\n              gameGenre={games.gameGenre}\n              gamePlatform={games.gamePlatform}\n              gamePrice={games.gamePrice}\n              gameReleaseYear={games.gameReleaseYear}\n              gameImage={games.gameImage}\n            />\n         ) );\n    }\n\n    return (\n        <div>\n        <section className=\"margin\">\n            <h3 className=\"h1\">Games</h3>\n            <p className=\"text margin\">Number of games: {gameArray.length}</p>\n            <div className=\"container\">\n            <div className=\"row\">{getGameItems()}</div>\n            </div>\n        </section>\n        </div>\n    )\n\n}\n\nexport default GameList;","import AddNewGame from \"../../components/games/AddNewGame\";\nimport GameList from \"../../components/games/GameList\";\nimport React from \"react\";\nconst DashBoard = () => {\n  return (\n      <section>\n          <AddNewGame/>\n          <GameList/>\n          \n      </section>\n  )\n}\n\nexport default DashBoard;","import { useState, useContext, ChangeEvent } from \"react\";\nimport { GameContext } from \"../../contexts/GameContext\";\nimport IGame from \"../../interfaces/IGame\";\nimport IGameContext from \"../../interfaces/IGameContext\";\nimport ImageUploadService from \"../../services/ImageUploadService\";\nimport GameService from \"../../services/GameService\";\nimport '../../css/Test.css';\nimport React from \"react\";\n\nconst UpdateGame = () => {\n\n    const { putGame } = useContext(GameContext) as IGameContext;\n\n    const [id, setId] = useState<string>(\"Id not set\");\n    const [gameName, setName] = useState<string>(\"Name not set\");\n    const [gameGenre, setGenre] = useState<string>(\"Genre not set\");\n    const [gamePlatform, setPlatform] = useState<string>(\"Platform not set\");\n    const [gamePrice, setPrice] = useState<string>(\"Price not set\");\n    const [gameReleaseYear, setReleaseYear] = useState<string>(\"Release Year not set\");\n    const [gameImage, setImage] = useState<any>();\n    const [gameImageFileName, setFileName] = useState<string>(\"\");\n\n\n    const getSpecifiedGame = async () => {\n        var game = await GameService.getGameById(parseInt(id));\n        setName(game.gameName);\n        setGenre(game.gameGenre);\n        setPlatform(game.gamePlatform);\n        setPrice(game.gamePrice);\n        setReleaseYear(game.gameReleaseYear);\n        setFileName(game.gameImage)\n    }\n\n    const imageHandler = (e: ChangeEvent<HTMLInputElement> ) => {\n        const {files} = e.target;\n          if(files!=null){ \n            const file = files[0];\n            setImage(file);\n            setFileName(file.name)\n        }\n    }\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n          case \"id\":\n              setId( value );\n          break;\n          case \"gameName\":\n              setName( value );\n          break;\n          case \"gameGenre\":\n              setGenre( value );\n          break;\n          case \"gamePlatform\":\n              setPlatform( value );\n          break;\n          case \"gamePrice\":\n              setPrice( value );\n          break;\n          case \"gameReleaseYear\":\n              setReleaseYear( value );\n          break;\n          case \"gameImage\":\n              setImage( value );\n          break;\n        \n          default:\n            break;\n        }\n    }\n\n    const editGame = () => {\n        const game : IGame = {\n            id: parseInt(id),\n            gameName: gameName,\n            gameGenre: gameGenre,\n            gamePlatform: gamePlatform,\n            gamePrice: parseInt(gamePrice),\n            gameReleaseYear: parseInt(gameReleaseYear),\n            gameImage: gameImageFileName\n        };\n        if(gameImage != null){\n            ImageUploadService.uploadImage(gameImage);\n            putGame( game );\n            alert(\"Edited game successfully with image\")\n        }else\n        {\n            putGame( game );\n            alert(\"Edited game successfully without image\")\n        }\n        \n        }\n\n\n    return (\n      <section className=\"margin\">\n      <h3 className=\"h1\">Update game</h3>\n      <div className=\"container d-flex justify-content-center\">\n      <div className=\"row d-flex justify-content-center\">\n      <div className=\"margin-bottom\">\n      <label className=\"col-3 col-sm-2 margin-new-game\">Id</label>\n            <input className=\"col-3 col-sm-6 margin-new-game\" name='id' onChange={changeHandler} type=\"text\" value={id} />\n            <button onClick={getSpecifiedGame}>Get Game</button>\n      </div>\n      \n        <div>\n          <label className=\"col-3 col-sm-2 margin-new-game\">Name</label>\n          <input className=\"col-6 col-sm-6 margin-new-game\" name=\"gameName\" value={gameName} onChange={changeHandler} type=\"text\" />\n          </div>\n          \n          <div>\n          <label className=\"col-3 col-sm-2 margin-new-game\">Genre</label>\n          <input className=\"col-6 col-sm-6 margin-new-game\" name=\"gameGenre\" value={gameGenre} onChange={changeHandler} type=\"text\" />\n          </div>\n          \n          <div>\n          <label className=\"col-3 col-sm-2 margin-new-game\">Platform</label>\n          <input className=\"col-6 col-sm-6 margin-new-game\" name=\"gamePlatform\" value={gamePlatform} onChange={changeHandler} type=\"text\" />\n          </div>\n          \n          <div>\n          <label className=\"col-3 col-sm-2 margin-new-game\">Price</label>\n          <input className=\"col-6 col-sm-6 margin-new-game\" name=\"gamePrice\" value={gamePrice} onChange={changeHandler} type=\"number\" />\n          </div>\n\n          <div>\n          <label className=\"col-3 col-sm-2 margin-new-game\">Release Year</label>\n          <input className=\"col-6 col-sm-6 margin-new-game\" name=\"gameReleaseYear\" value={gameReleaseYear} onChange={changeHandler} type=\"number\" />\n          </div>\n          \n          <div>\n          <label className=\"col-3 col-sm-2 margin-new-game\">Image</label>\n          <input className=\"col-6 col-sm-6 margin-new-game text\" name=\"gameImage\" onChange={imageHandler} type=\"file\" /> \n          </div>\n          \n          <button className=\"col-lg-1 col-sm-3 col-4 button margin2\" onClick={editGame}>Update</button>\n      </div>\n    </div>\n  </section>\n          \n    )\n}\n\nexport default UpdateGame;","import UpdateGame from \"../../components/games/UpdateGame\";\nimport GameList from \"../../components/games/GameList\";\n// import ArtifactList from \"../components/artifacts/ArtifactList\";\nimport React from \"react\";\n\nconst UpdateGamePage = () => {\n  return (\n      <section>\n          <UpdateGame/>\n          <GameList/>\n      </section>\n  )\n}\n\nexport default UpdateGamePage;","import React, { useState, useRef } from \"react\";\nimport IGame from \"../../interfaces/IGame\";\nimport GameItem from \"./GameItem\";\nimport GameService from \"../../services/GameService\";\n\n\nconst SearchGameByName = () => {\n\n  const [game, setGame] = useState<IGame[]>([]);\n  const gameElement = useRef<HTMLInputElement>(null);\n\n  const getGame = async ()  => {\n          if(gameElement.current){\n          const gamesElement = gameElement.current.value;\n          const chosenGame =  await GameService.getGameByName(gamesElement);\n          setGame( chosenGame );\n  }\n  alert(\"Retrieved game success\")\n\n  }\n\n\n  const showGame = () => {\n    return (\n      game?.map((game: { gameName: string; gameGenre: string; gamePlatform: string; gamePrice: number; gameReleaseYear: number; gameImage: string; },i: number) => (\n        <GameItem \n        key={`game-${i}`}\n        gameName={game.gameName}\n        gameGenre={game.gameGenre}\n        gamePlatform={game.gamePlatform}\n        gamePrice={game.gamePrice}\n        gameReleaseYear={game.gameReleaseYear}\n        gameImage={game.gameImage}\n  />  \n      ))\n    \n    )\n  }  \n\n\n  return (\n      <section className=\"update-game-container margin\">\n          <h3 className=\"h1\">Search For Game</h3>\n          <div className=\"container\">\n            <div className=\"row\">\n          <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Game Name</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" ref={gameElement} type=\"text\"/>\n          </div>\n          <button className=\"col-lg-1 col-sm-3 col-4 button margin2\" onClick={getGame}>Search</button>\n          </div>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\">{showGame()}</div>\n          </div>\n      </section>\n  )\n\n\n}\n\nexport default SearchGameByName;","import UpdateGame from \"../../components/games/UpdateGame\";\nimport GameList from \"../../components/games/GameList\";\nimport SearchGameByName from \"../../components/games/SearchGameByName\";\nimport React from \"react\";\nconst ShowGameByNamePage = () => {\n  return (\n      <section>\n          <SearchGameByName/>\n      </section>\n  )\n}\n\nexport default ShowGameByNamePage;","import React, { useState, useContext, ChangeEvent } from \"react\";\nimport { GameContext } from \"../../contexts/GameContext\";\nimport IGameContext from \"../../interfaces/IGameContext\";\n\n\nconst DeleteGame = () =>\n\n{\n\n    const [id, setId] = useState<number>(0);\n    const { deleteGameById } = useContext(GameContext) as IGameContext;\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setId( parseInt( e.currentTarget.value ));\n    }\n\n    const deleteGame = () => {\n        deleteGameById( id );\n        alert(\"Deleted Game\")\n    }\n\n    return (\n        <section className=\"margin\">\n            <h3 className=\"h1\">Delete a Game</h3> \n            <div className=\"container\">\n            <div className=\"row\">\n            <div>\n                <label className=\"col-12 col-lg-2 margin-new-game\">Type in ID to the game you want to delete </label>\n                <input className=\"col-6 col-sm-6 margin-new-game\" onChange={handleChange} type=\"number\" value={id} />\n            </div>\n            <button className=\"col-lg-1 col-sm-3 col-4 button margin2\" onClick={deleteGame}>Delete</button>          \n            </div>\n            </div>\n        </section>\n    )\n}\n\n\n\nexport default DeleteGame;","import DeleteGame from \"../../components/games/DeleteGame\";\nimport GameList from \"../../components/games/GameList\";\n// import ArtifactList from \"../components/artifacts/ArtifactList\";\nimport React from \"react\";\nconst DeleteGamePage = () => {\n  return (\n      <section>\n          <DeleteGame/>\n          <GameList/>\n      </section>\n  )\n}\n\nexport default DeleteGamePage;","import axios from 'axios';\nimport ICharacter from '../interfaces/ICharacter';\n\nconst CharacterService = (\n  () => {\n\n    const characterEndpoints = {\n      characters: \"https://localhost:7226/GameCharacter\",\n      characterByName: \"https://localhost:7226/GameCharacter/GetByName?characterName\"\n    }\n\n    const getAllCharacters = async () => {\n      const result = await axios.get(characterEndpoints.characters);\n      console.log(result.data);\n      return result.data;\n    }\n\n    const getCharacterById = async(id: number) => {\n      const result = await axios.get(`${characterEndpoints.characters}/${id}`);\n      return result.data;\n    }\n\n    const getCharacterByName = async(name: string) => {\n      const result = await axios.get(`${characterEndpoints.characterByName}=${name}`);\n      return result.data;\n    }\n\n    const postCharacter = async (g: ICharacter) => {\n        const result = await axios.post(characterEndpoints.characters, g);\n        console.log(result);\n        \n    }\n\n    const putCharacter = async (g: ICharacter) => {\n      const result = await axios.put(characterEndpoints.characters, g);\n      return result.data;\n    }\n\n    const deleteCharacter = async (id: number) => {\n      const result = await axios.delete(`${characterEndpoints.characters}/${id}`)\n      console.log(result);\n      return result;\n    }\n\n    return {\n      getAllCharacters,\n      getCharacterByName,\n      getCharacterById,\n      postCharacter,\n      putCharacter,\n      deleteCharacter\n    }\n\n  }\n)();\n\nexport default CharacterService;","import React, { useState, createContext, FC, ReactNode, useEffect } from \"react\";\nimport ICharacter from \"../interfaces/ICharacter\";\nimport ICharacterContext from \"../interfaces/ICharacterContext\";\nimport CharacterService from \"../services/CharacterService\";\n\nexport const CharacterContext = createContext<ICharacterContext | null>(null)\n\ninterface Props{\n    children: ReactNode,\n}\n\nexport const CharacterProvider : FC<Props> = ({children}) => {\n\n  const [characterArray, setCharacter] = useState<ICharacter[]>([]);\n\n  useEffect(\n    ()=>{\n        getAllCharacters();\n    }, [characterArray.length]\n  )\n\n  const getAllCharacters = async() => {\n    const allCharacters = await CharacterService.getAllCharacters();\n    setCharacter(allCharacters);\n  }\n\n  const getCharacterById = async(id: number) => {\n    var character = await CharacterService.getCharacterById(id);\n  }\n\n  const getCharacterByName = async(name: string) => {\n    const getGameByName = await CharacterService.getCharacterByName(name);\n  }\n\n  const addCharacter = async (character: ICharacter) => {\n    setCharacter( [ character, ...characterArray ] );\n    await CharacterService.postCharacter(character);\n  }\n\n  const putCharacter = async (character: ICharacter) => {\n    setCharacter( [character, ...characterArray] );\n    await CharacterService.putCharacter(character)\n  }\n\n  const deleteCharacterById = async (id: number) => {\n    await CharacterService.deleteCharacter(id);\n    const newCharacterArray = characterArray.filter(character => character.id !== id);\n    setCharacter(newCharacterArray);\n  }\n\n  return(\n    <CharacterContext.Provider value={{characterArray, addCharacter, putCharacter, getCharacterByName, deleteCharacterById}}>\n        {children}\n    </CharacterContext.Provider>\n  )\n}","import React, { useState, useContext, ChangeEvent } from \"react\";\nimport { CharacterContext } from \"../../contexts/CharacterContext\";\nimport ICharacter from \"../../interfaces/ICharacter\";\nimport ICharacterContext from \"../../interfaces/ICharacterContext\";\nimport ImageUploadService from \"../../services/ImageUploadService\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../../css/Test.css\"\n\n\nconst AddNewCharacter = () => {\n\n    const { addCharacter } = useContext(CharacterContext) as ICharacterContext;\n\n    const [image, setImage] = useState<File | null>(null);\n\n    const [newCharacter, setNewCharacter] = useState<ICharacter>({\n        characterName: \"\",\n        characterGame: \"\",\n        characterAge: 0,\n        characterImage: \"\"\n    });\n\n\n\n\n    const characterObjecthandler = (e: { target: { name: any; value: any; }; }) => {\n        const {name, value} = e.target;\n        setNewCharacter({...newCharacter,[name]: value});\n    }\n\n\n    const imageHandler = (e: ChangeEvent<HTMLInputElement> ) => {\n        const {files} = e.target; \n          if(files!=null){ \n            const file = files[0];\n            setImage(file);\n\n            newCharacter.characterImage = file.name\n\n\n          }\n        \n      }\n\n\n    const addNewCharacterHandler = () => {\n\n        if(newCharacter != null && image != null){\n            addCharacter(newCharacter); \n            ImageUploadService.uploadImage(image);\n        }\n      alert(\"Added new character\")\n\n    }\n\n    return (\n      <section className=\"margin\">\n          <h3 className=\"h1\">Add a new character</h3>\n          <div className=\"container\">\n            <div className=\"row\">\n                <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Name</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"characterName\" onChange={characterObjecthandler} type=\"text\" />\n              </div>\n\n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Game</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"characterGame\" onChange={characterObjecthandler} type=\"text\" />\n              </div>\n\n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Age</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"characterAge\" onChange={characterObjecthandler} type=\"number\" />\n              </div>\n              \n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Image</label>\n              <input className=\"col-6 col-sm-6 margin-new-game text\" name=\"characterImage\" onChange={imageHandler} type=\"file\" />\n              </div>\n              <button className=\"button col-lg-1 col-sm-3 col-4 margin2\" onClick={addNewCharacterHandler}>Add</button>\n          </div>\n          </div>\n          <div className=\"d-flex justify-content-center\">\n              </div>\n      </section>\n    )\n}\n\nexport default AddNewCharacter;","import { FC } from 'react';\nimport ICharacter from '../../interfaces/ICharacter';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Test.css';\nimport React from \"react\";\nconst CharacterItem : FC<ICharacter> = ({id, characterName, characterGame, characterAge, characterImage}) => {\n    return (\n            <article className='games-box margin col-10 col-sm-4 col-lg-3'>\n                <h3 className='games-h1'>{id}: {characterName}</h3>\n                <p className='text'>Game: {characterGame}</p>\n                <p className='text'>Age: {characterAge}</p>\n                <img className='width-height' src={`https://localhost:7226/images/${characterImage}`}/>\n            </article>\n)}\n\nexport default CharacterItem;\n\n","import React, { useContext } from \"react\";\nimport { CharacterContext } from \"../../contexts/CharacterContext\";\nimport ICharacterContext from \"../../interfaces/ICharacterContext\";\nimport CharacterItem from \"./CharacterItem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Test.css'\n\nconst CharacterList = () => {\n\n    const { characterArray } = useContext(CharacterContext) as ICharacterContext;\n\n    const getCharacterItems = () => {\n        return characterArray.map( (characters, i)  => (\n            <CharacterItem\n              key={`game-${i}`}\n              id={characters.id}\n              characterName={characters.characterName}\n              characterGame={characters.characterGame}\n              characterAge={characters.characterAge}\n              characterImage={characters.characterImage}\n            />\n         ) );\n    }\n\n    return (\n        <div>\n        <section>\n            <h3 className=\"h1\">Game Characters</h3>\n            <p className=\"text margin\">Number of characters: {characterArray.length}</p>\n            <div className=\"container\">\n            <div className=\"row\">{getCharacterItems()}</div>\n            </div>\n        </section>\n        </div>\n    )\n\n}\n\nexport default CharacterList;","import AddNewCharacter from \"../../components/gameCharacters/AddNewCharacter\";\nimport CharacterList from \"../../components/gameCharacters/CharacterList\";\nimport React from \"react\";\n\nconst AddAndSeeAllCharacterPage = () => {\n  return (\n      <section>\n          <AddNewCharacter/>\n          <CharacterList/>\n          \n      </section>\n  )\n}\n\nexport default AddAndSeeAllCharacterPage;","import React, { useState, useContext, ChangeEvent } from \"react\";\nimport { CharacterContext } from \"../../contexts/CharacterContext\";\nimport ICharacterContext from \"../../interfaces/ICharacterContext\";\n\n\nconst DeleteCharacter = () =>\n\n{\n\n\n\n    const [id, setId] = useState<number>(0);\n    const { deleteCharacterById } = useContext(CharacterContext) as ICharacterContext;\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setId( parseInt( e.currentTarget.value ));\n    }\n\n    const deleteCharacter = () => {\n        deleteCharacterById( id );\n        alert(\"Deleted character\")\n    }\n\n    return (\n        <section className=\"margin\">\n            <h3 className=\"h1\">Delete a Character</h3> \n            <div className=\"container\">\n            <div className=\"row\">\n            <div>\n                <label className=\"col-12 col-lg-2 margin-new-game\">Type in ID to the character you want to delete</label>\n                <input className=\"col-6 col-sm-6 margin-new-game\" onChange={handleChange} type=\"number\" value={id} />\n            </div>\n            <button className=\"button margin2 col-lg-1 col-sm-3 col-4\" onClick={deleteCharacter}>Delete</button>          \n            </div>\n            </div>\n        </section>\n    )\n}\n\n\n\nexport default DeleteCharacter;","import DeleteCharacter from \"../../components/gameCharacters/DeleteCharacter\";\nimport CharacterList from \"../../components/gameCharacters/CharacterList\";\n// import ArtifactList from \"../components/artifacts/ArtifactList\";\nimport React from \"react\";\nconst DeleteCharacterPage = () => {\n  return (\n      <section>\n          <DeleteCharacter/>\n          <CharacterList/>\n      </section>\n  )\n}\n\nexport default DeleteCharacterPage;","import React, { useState, useRef } from \"react\";\nimport ICharacter from \"../../interfaces/ICharacter\";\nimport CharacterItem from \"./CharacterItem\";\nimport CharacterService from \"../../services/CharacterService\";\n\n\nconst SearchCharacterByName = () => {\n\n  const [character, setCharacter] = useState<ICharacter[]>([]);\n  const characterNameElement = useRef<HTMLInputElement>(null);\n\n  const getCharacterByName = async ()  => {\n          if(characterNameElement.current){\n          const characterName = characterNameElement.current.value;\n          const chosenCharacter =  await CharacterService.getCharacterByName(characterName);\n          setCharacter( chosenCharacter );\n  }\n  alert(\"Retrieved character\")\n  }\n\n  const showCharacter = () => {\n    return (\n      character?.map((character: { characterName: string; characterGame: string; characterAge: number; characterImage: string; },i: number) => (\n        <CharacterItem \n        key={`character-${i}`}\n        characterName={character.characterName}\n        characterGame={character.characterGame}\n        characterAge={character.characterAge}\n        characterImage={character.characterImage}\n  />  \n      ))\n    \n    )\n  }  \n\n\n  return (\n      <section className=\"margin update-game-container\">\n          <h3 className=\"h1\">Search For Character</h3>\n          <div className=\"container\">\n          <div className=\"row\">\n          <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Character Name</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" ref={characterNameElement} type=\"text\"/>\n          </div>\n          <button className=\"button col-lg-1 col-sm-3 col-4 margin2\" onClick={getCharacterByName}>Search</button>\n          </div>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\">{showCharacter()}</div>\n          </div>\n          \n      </section>\n  )\n\n\n}\n\nexport default SearchCharacterByName;","import SearchCharacterByName from \"../../components/gameCharacters/SearchCharacterByName\";\nimport React from \"react\";\n\nconst ShowCharacterByNamePage = () => {\n  return (\n      <section>\n          <SearchCharacterByName/>\n      </section>\n  )\n}\n\nexport default ShowCharacterByNamePage;","import { useState, useContext, ChangeEvent } from \"react\";\nimport { CharacterContext } from \"../../contexts/CharacterContext\";\nimport ICharacter from \"../../interfaces/ICharacter\";\nimport ICharacterContext from \"../../interfaces/ICharacterContext\";\nimport ImageUploadService from \"../../services/ImageUploadService\";\nimport CharacterService from \"../../services/CharacterService\";\nimport React from \"react\";\n\nconst UpdateCharacter = () => {\n\n    const { putCharacter } = useContext(CharacterContext) as ICharacterContext;\n\n\n    const [id, setId] = useState<string>(\"Id not set\");\n    const [characterName, setName] = useState<string>(\"Name not set\");\n    const [characterGame, setGame] = useState<string>(\"Game not set\");\n    const [characterAge, setAge] = useState<string>(\"Age not set\");\n    const [characterImage, setImage] = useState<any>();\n    const [characterImageFileName, setFileName] = useState<string>(\"\");\n\n\n    const getSpecifiedCharacter = async () => {\n        var character = await CharacterService.getCharacterById(parseInt(id));\n        console.log(character);\n        setName(character.characterName);\n        setGame(character.characterGame);\n        setAge(character.characterAge);\n        setFileName(character.characterImage)\n    }\n\n    const imageHandler = (e: ChangeEvent<HTMLInputElement> ) => {\n        const {files} = e.target; \n          if(files!=null){ \n            const file = files[0];\n            setImage(file);\n            setFileName(file.name)\n        }\n    }\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n          case \"id\":\n              setId( value );\n          break;\n          case \"characterName\":\n              setName( value );\n          break;\n          case \"characterGame\":\n              setGame( value );\n          break;\n          case \"characterAge\":\n              setAge( value );\n          break;\n          case \"characterImage\":\n              setImage( value );\n          break;\n        \n          default:\n            break;\n        }\n    }\n\n \n\n    const editCharacter = () => {\n        const character : ICharacter = {\n            id: parseInt(id),\n            characterName: characterName,\n            characterGame: characterGame,\n            characterAge: parseInt(characterAge),\n            characterImage: characterImageFileName\n        };\n\n            \n            console.log(character);\n            if(characterImage != null){\n                ImageUploadService.uploadImage(characterImage);\n            putCharacter( character );\n            alert(\"Edited character successfully with image\")\n        \n            }\n            else\n            {\n                putCharacter( character );\n                alert(\"Edited character successfully without image\")\n            }\n            \n        \n    }\n\n    return (\n      <section className=\"margin\">\n          <h3 className=\"h1\">Update character</h3>\n          <div className=\"container\">\n            <div className=\"row\">\n          <div className=\"margin-bottom\">\n          <label className=\"col-3 col-sm-2 margin-new-game\">Id</label>\n                <input className=\"col-3 col-md-6 margin-new-game\" name='id' onChange={changeHandler} type=\"text\" value={id} />\n                <button className=\"col-3 col-md-1 margin-new-game\" onClick={getSpecifiedCharacter}>Get</button>\n          </div>\n          \n        \n            <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Name</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"characterName\" value={characterName} onChange={changeHandler} type=\"text\" />\n              </div>\n              \n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Game</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"characterGame\" value={characterGame} onChange={changeHandler} type=\"text\" />\n              </div>\n              \n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Age</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"characterAge\" value={characterAge} onChange={changeHandler} type=\"number\" />\n              </div>\n\n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Image</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"characterImage\" onChange={imageHandler} type=\"file\" /> \n              </div>\n              \n              <button className=\"col-lg-1 col-sm-3 col-4 button margin2\" onClick={editCharacter}>Update</button>\n          </div>\n          </div>\n          \n      </section>\n    )\n}\n\nexport default UpdateCharacter;","import UpdateCharacter from \"../../components/gameCharacters/UpdateCharacter\";\nimport CharacterList from \"../../components/gameCharacters/CharacterList\";\n// import ArtifactList from \"../components/artifacts/ArtifactList\";\nimport React from \"react\";\nconst UpdateCharacterPage = () => {\n  return (\n      <section>\n          <UpdateCharacter/>\n          <CharacterList/>\n      </section>\n  )\n}\n\nexport default UpdateCharacterPage;","import axios from 'axios';\nimport IConsole from '../interfaces/IConsole';\n\nconst ConsolesService = (\n  () => {\n\n    const consoleEndpoints = {\n      consoles: \"https://localhost:7226/Consoles\",\n      consoleByName: \"https://localhost:7226/Consoles/GetByName?\",\n      consoleByPriceRange: 'https://localhost:7226/Consoles/GetByPriceRange?'\n    }\n\n    const getAllConsoles = async () => {\n      const result = await axios.get(consoleEndpoints.consoles);\n      console.log(result.data);\n      return result.data;\n    }\n\n    const getConsoleById = async(id: number) => {\n      const result = await axios.get(`${consoleEndpoints.consoles}/${id}`);\n      return result.data;\n    }\n\n    const getConsoleByName = async(name: string) => {\n      const result = await axios.get(`${consoleEndpoints.consoleByName}consoleNameFromDb=${name}`);\n      return result.data;\n    }\n\n    const getConsoleByPriceRange = async(minPrice: number, maxPrice: number) => {\n      const result = await axios.get(`${consoleEndpoints.consoleByPriceRange}minPrice=${minPrice}&maxPrice=${maxPrice}`);\n      return result.data;\n    }\n\n    const postConsole = async (c: IConsole) => {\n        const result = await axios.post(consoleEndpoints.consoles, c);\n        console.log(result);\n        \n    }\n\n    const putConsole = async (c: IConsole) => {\n      const result = await axios.put(consoleEndpoints.consoles, c);\n      return result.data;\n    }\n\n    const deleteConsole = async (id: number) => {\n      const result = await axios.delete(`${consoleEndpoints.consoles}/${id}`)\n      console.log(result);\n      return result;\n    }\n\n    return {\n      getAllConsoles,\n      getConsoleByName,\n      getConsoleByPriceRange,\n      getConsoleById,\n      postConsole,\n      putConsole,\n      deleteConsole\n    }\n\n  }\n)();\n\nexport default ConsolesService;","import React, { useState, createContext, FC, ReactNode, useEffect, useRef } from \"react\";\nimport IConsole from \"../interfaces/IConsole\";\nimport IConsoleContext from \"../interfaces/IConsoleContext\";\nimport ConsolesService from \"../services/ConsolesService\";\n\nexport const ConsoleContext = createContext<IConsoleContext | null>(null)\n\ninterface Props{\n    children: ReactNode,\n}\n\nexport const ConsoleProvider : FC<Props> = ({children}) => {\n\n  const [consoleArray, setConsole] = useState<IConsole[]>([]);\n\n  useEffect(\n    ()=>{\n        getAllConsoles();\n    }, [consoleArray.length]\n  )\n\n  const getAllConsoles = async() => {\n    const allConsoles = await ConsolesService.getAllConsoles()\n    setConsole(allConsoles);\n  }\n\n  const getConsoleById = async(id: number) => {\n    var console = await ConsolesService.getConsoleById(id);\n  }\n\n  const getConsoleByName = async(name: string) => {\n    const getConsoleByName = await ConsolesService.getConsoleByName(name);\n  }\n\n  const getConsoleByPriceRange = async(minPrice: number, maxPrice: number) => {\n    const getConsoleByPrceRange = await ConsolesService.getConsoleByPriceRange(minPrice, maxPrice);\n  }\n\n  const addConsole = async (console: IConsole) => {\n    setConsole( [ console, ...consoleArray ] );\n    await ConsolesService.postConsole(console);\n  }\n\n  const putConsole = async (console: IConsole) => {\n    setConsole( [console, ...consoleArray] );\n    await ConsolesService.putConsole(console);\n  }\n\n  const deleteConsoleById = async (id: number) => {\n    await ConsolesService.deleteConsole(id);\n    const newConsoleArray = consoleArray.filter(console => console.id !== id);\n    setConsole(newConsoleArray);\n  }\n\n  return(\n    <ConsoleContext.Provider value={{consoleArray, addConsole, putConsole, getConsoleByName, getConsoleByPriceRange, deleteConsoleById}}>\n        {children}\n    </ConsoleContext.Provider>\n  )\n}","import React, { useState, useContext, ChangeEvent } from \"react\";\nimport { ConsoleContext } from \"../../contexts/ConsoleContext\";\nimport IConsole from \"../../interfaces/IConsole\";\nimport IConsoleContext from \"../../interfaces/IConsoleContext\";\nimport ImageUploadService from \"../../services/ImageUploadService\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../../css/Test.css\"\n\n\nconst AddNewConsole = () => {\n\n    const { addConsole } = useContext(ConsoleContext) as IConsoleContext;\n\n    const [image, setImage] = useState<File | null>(null);\n\n    const [newConsole, setNewConsole] = useState<IConsole>({\n        consoleName: \"\",\n        consolePrice: 0,\n        consoleImage: \"\"\n    });\n\n    const consoleObjecthandler = (e: { target: { name: any; value: any; }; }) => {\n        const {name, value} = e.target;\n        setNewConsole({...newConsole,[name]: value});\n    }\n\n\n    const imageHandler = (e: ChangeEvent<HTMLInputElement> ) => {\n        const {files} = e.target;\n          if(files!=null){ \n            const file = files[0];\n            setImage(file);\n\n            newConsole.consoleImage = file.name\n\n          }\n        \n      }\n\n\n    const addNewConsoleHandler = () => {\n        if(newConsole != null && image != null){\n            addConsole(newConsole); \n            ImageUploadService.uploadImage(image);\n        }\n        alert(\"Added new Console\")\n\n    }\n\n    return (\n      <section className=\"margin\">\n          <h3 className=\"h1\">Add a new console</h3>\n          <div className=\"container\">\n            <div className=\"row\">\n                <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Name</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"consoleName\" onChange={consoleObjecthandler} type=\"text\" />\n              </div>\n\n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Price</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" name=\"consolePrice\" onChange={consoleObjecthandler} type=\"number\" />\n              </div>\n              \n              <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Image</label>\n              <input className=\"col-6 col-sm-6 margin-new-game text\" name=\"consoleImage\" onChange={imageHandler} type=\"file\" />\n              </div>\n              <button className=\"col-lg-1 col-sm-3 col-4 button margin2\" onClick={addNewConsoleHandler}>Add</button>\n          </div>\n          </div>\n          \n      </section>\n    )\n}\n\nexport default AddNewConsole;","import { FC } from 'react';\nimport IConsole from '../../interfaces/IConsole';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../../css/Test.css';\nimport React from \"react\";\nconst ConsoleItem : FC<IConsole> = ({id, consoleName, consolePrice, consoleImage}) => {\n    return (\n            <article className='games-box margin col-10 col-sm-4 col-lg-3'>\n                <h3 className='games-h1'>{id}: {consoleName}</h3>\n                <p className='text'>Price: {consolePrice}</p>\n                <img className='width-height' src={`https://localhost:7226/images/${consoleImage}`}/>\n            </article>\n)}\n\nexport default ConsoleItem;","import React, { useContext } from \"react\";\nimport { ConsoleContext } from \"../../contexts/ConsoleContext\";\nimport IConsoleContext from \"../../interfaces/IConsoleContext\";\nimport ConsoleItem from \"./ConsoleItem\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ConsoleList = () => {\n\n    const { consoleArray } = useContext(ConsoleContext) as IConsoleContext;\n\n    const getConsoleItems = () => {\n        return consoleArray.map( (consoles, i)  => (\n            <ConsoleItem\n              key={`console-${i}`}\n              id={consoles.id}\n              consoleName={consoles.consoleName}\n              consolePrice={consoles.consolePrice}\n              consoleImage={consoles.consoleImage}\n            />\n         ) );\n    }\n\n    return (\n        <div>\n        <section>\n            <h3 className=\"h1\">Consoles</h3>\n            <p className=\"text margin\">Number of consoles: {consoleArray.length}</p>\n            <div className=\"container\">\n            <div className=\"row\">{getConsoleItems()}</div>\n            </div>\n        </section>\n        </div>\n    )\n\n}\n\nexport default ConsoleList;","import React, { useState, useContext, ChangeEvent } from \"react\";\nimport { ConsoleContext } from \"../../contexts/ConsoleContext\";\nimport IConsoleContext from \"../../interfaces/IConsoleContext\";\n\n\nconst DeleteConsole = () =>\n\n{\n\n    const [id, setId] = useState<number>(0);\n    const { deleteConsoleById } = useContext(ConsoleContext) as IConsoleContext;\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setId( parseInt( e.currentTarget.value ));\n    }\n\n    const deleteConsole = () => {\n        deleteConsoleById(id);\n        alert(\"Deleted Console\")\n\n    }\n\n    return (\n        <section className=\"margin\">\n            <h3 className=\"h1\">Delete a Console</h3> \n            <div className=\"container\">\n            <div className=\"row\">\n            <div>\n                <label className=\"col-12 col-lg-2 margin-new-game text-size\">Type in ID to the console you want to delete</label>\n                <input className=\"col-6 col-sm-6 margin-new-game\" onChange={handleChange} type=\"number\" value={id} />\n            </div>\n            <button className=\"margin2 button col-lg-1 col-sm-3 col-4\" onClick={deleteConsole}>Delete</button>          \n            </div>\n            </div>\n        </section>\n    )\n}\n\n\n\nexport default DeleteConsole;","import React, { useState, useRef } from \"react\";\nimport IConsole from \"../../interfaces/IConsole\";\nimport ConsoleItem from \"./ConsoleItem\";\nimport ConsolesService from \"../../services/ConsolesService\";\n\n\nconst SearchConsoleByName = () => {\n\n  const [console, setConsole] = useState<IConsole[]>([]);\n  const consoleNameElement = useRef<HTMLInputElement>(null);\n\n  const getConsoleByName = async ()  => {\n          if(consoleNameElement.current){\n          const consoleName = consoleNameElement.current.value;\n          const chosenConsole =  await ConsolesService.getConsoleByName(consoleName);\n          setConsole( chosenConsole );\n  }\n  alert(\"Console retrieved\")\n\n  }\n\nconst showConsole = () => {\n  return (\n    console?.map((console: { consoleName: string; consolePrice: number; consoleImage: string; },i: number) => (\n      <ConsoleItem \n      key={`character-${i}`}\n      consoleName={console.consoleName}\n      consolePrice={console.consolePrice}\n      consoleImage={console.consoleImage}\n/>  \n    ))\n  \n  )\n} \n\n\n  return (\n      <section className=\"margin update-game-container\">\n          <h3 className=\"h1\">Search For Console By Name</h3>\n          <div className=\"container\">\n          <div className=\"row\">\n          <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Console Name</label>\n              <input className=\"col-6 col-sm-6  margin-new-game\" ref={consoleNameElement} type=\"text\"/>\n          </div>\n          <button className=\"margin2 button col-lg-1 col-sm-3 col-4\" onClick={getConsoleByName}>Search</button>\n          </div>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\">{showConsole()}</div>\n          </div>\n          \n      </section>\n  )\n\n\n}\n\nexport default SearchConsoleByName;","import React, { useState, useRef } from \"react\";\nimport IConsole from \"../../interfaces/IConsole\";\nimport ConsoleItem from \"./ConsoleItem\";\nimport ConsolesService from \"../../services/ConsolesService\";\n\n\nconst SearchConsolePriceRange = () => {\n\n  const [consoles, setConsoles] = useState<IConsole[]>([]);\n  const consolePriceElementOne = useRef<HTMLInputElement>(null);\n  const consolePriceElementTwo = useRef<HTMLInputElement>(null);\n\n  const getCharacterByName = async ()  => {\n          if(consolePriceElementOne.current && consolePriceElementTwo.current){\n          const characterName = consolePriceElementOne.current.value;\n          const characterNameT = consolePriceElementTwo.current.value;\n          const consolesInPriceRange = await ConsolesService.getConsoleByPriceRange(parseInt(characterName), parseInt(characterNameT));\n          setConsoles( consolesInPriceRange );\n  }\n  alert(\"console retrieved\")\n\n  }\n\n  const showConsoles = () => {\n    return (\n      consoles?.map((console: { consoleName: string; consolePrice: number; consoleImage: string; },i: number) => (\n        <ConsoleItem \n        key={`character-${i}`}\n        consoleName={console.consoleName}\n        consolePrice={console.consolePrice}\n        consoleImage={console.consoleImage}\n  />  \n      ))\n    \n    )\n  }  \n\n  return (\n      <section className=\"margin\">\n          <h3 className=\"h1\">Search For Console in specified pricerange</h3>\n          <div className=\"container\">\n          <div className=\"row\">\n          <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Min price</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" ref={consolePriceElementOne} type=\"number\"/>\n          </div>\n          \n          <div>\n              <label className=\"col-3 col-sm-2 margin-new-game\">Max price</label>\n              <input className=\"col-6 col-sm-6 margin-new-game\" ref={consolePriceElementTwo} type=\"number\"/>\n          </div>\n          <button className=\"margin2 button col-lg-1 col-sm-3 col-4\" onClick={getCharacterByName}>Search</button>\n          </div>\n          </div>\n          <div className=\"container\">\n          <div className=\"row\">{showConsoles()}</div>\n          </div>\n      </section>\n  )\n\n\n}\n\nexport default SearchConsolePriceRange;","import { useState, useContext, ChangeEvent } from \"react\";\nimport { ConsoleContext } from \"../../contexts/ConsoleContext\";\nimport IConsole from \"../../interfaces/IConsole\";\nimport IConsoleContext from \"../../interfaces/IConsoleContext\";\nimport ImageUploadService from \"../../services/ImageUploadService\";\nimport ConsolesService from \"../../services/ConsolesService\";\nimport React from \"react\";\n\nconst UpdateConsole = () => {\n\n    const { putConsole } = useContext(ConsoleContext) as IConsoleContext;\n\n\n    const [id, setId] = useState<string>(\"Id not set\");\n    const [consoleName, setName] = useState<string>(\"Name not set\");\n    const [consolePrice, setPrice] = useState<string>(\"Price not set\");\n    const [consoleImage, setImage] = useState<any>();\n    const [consoleImageFileName, setFileName] = useState<string>(\"\");\n\n\n    const getSpecifiedConsole = async () => {\n        var console = await ConsolesService.getConsoleById(parseInt(id));\n        setName(console.consoleName);\n        setPrice(console.consolePrice);\n        setFileName(console.consoleImage)\n    }\n\n    const imageHandler = (e: ChangeEvent<HTMLInputElement> ) => {\n        const {files} = e.currentTarget; \n          if(files!=null){ \n            const file = files[0];\n            setImage(file);\n            setFileName(file.name)\n        }\n    }\n\n    const changeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.currentTarget;\n\n        switch (name) {\n          case \"id\":\n              setId( value );\n          break;\n          case \"consoleName\":\n              setName( value );\n          break;\n          case \"consolePrice\":\n              setPrice( value );\n          break;\n          case \"consoleImage\":\n              setImage( value );\n          break;\n        \n          default:\n            break;\n        }\n    }\n\n \n\n    const editConsole = () => {\n        \n        \n        const console : IConsole = {\n            id: parseInt(id),\n            consoleName: consoleName,\n            consolePrice: parseInt(consolePrice),\n            consoleImage: consoleImageFileName\n        };\n        if(consoleImage != null){\n            ImageUploadService.uploadImage(consoleImage);\n            putConsole(console);\n            alert(\"edited console successfully with image\")\n        }else{\n            putConsole( console );\n            alert(\"edited console successfully without image\")\n        }\n\n\n    }\n        \n\n    return (\n      <section className=\"margin\">\n          <h3 className=\"h1\">Update console</h3>\n          <div className=\"container\">\n          <div className=\"row\">\n          <div className=\"margin-bottom\">\n            <label className=\"col-3 col-sm-2 margin-new-game\">Id</label>\n            <input className=\"col-3 col-sm-6 margin-new-game\" name='id' onChange={changeHandler} type=\"text\" value={id} />\n            <button onClick={getSpecifiedConsole}>Get Console</button>\n          </div>\n          <div>\n            <label className=\"col-3 col-sm-2 margin-new-game\">Name</label>\n            <input className=\"col-6 col-sm-6 margin-new-game\" name=\"consoleName\" value={consoleName} onChange={changeHandler} type=\"text\" />\n            </div>\n            \n            <div>\n            <label className=\"col-3 col-sm-2 margin-new-game\">Price</label>\n            <input className=\"col-6 col-sm-6 margin-new-game\" name=\"consolePrice\" value={consolePrice} onChange={changeHandler} type=\"number\" />\n            </div>\n            \n            <div>\n            <label className=\"col-3 col-sm-2 margin-new-game\">Image</label>\n            <input className=\"col-6 col-sm-6 margin-new-game\" name=\"consoleImage\" onChange={imageHandler} type=\"file\" /> \n            </div>\n            \n            <button className=\"col-lg-1 col-sm-3 col-4 margin2 button\" onClick={editConsole}>Update</button>\n          </div>\n          </div>\n          \n      </section>\n    )\n}\n\nexport default UpdateConsole;","import HomePage from \"./HomePage\";\nimport DashBoard from \"./games/DashBoard\";\nimport QuizList from \"../components/quiz/QuizList\";\nimport UpdateGamePage from \"./games/UpdateGamePage\";\nimport ShowGameByNamePage from \"./games/ShowGameByNamePage\";\nimport DeleteGamePage from \"./games/DeleteGamePage\";\nimport AddAndSeeAllCharacterPage from \"./characters/AddAndSeeAllCharacterPage\";\nimport DeleteCharacterPage from \"./characters/DeleteCharacterPage\";\nimport ShowCharacterByNamePage from \"./characters/ShowCharacterByNamePage\";\nimport UpdateCharacterPage from \"./characters/UpdateCharacterPage\";\nimport AddAndSeeAllConsolesPage from \"./consoles/AddNewAndSeeAllConsolesPage\";\nimport DeleteConsolePage from \"./consoles/DeleteConsolePage\";\nimport ShowConsoleByNamePage from \"./consoles/ShowConsoleByNamePage\";\nimport ShowConsoleByPriceRangePage from \"./consoles/ShowConsoleByPriceRangePage\";\nimport UpdateConsolePage from \"./consoles/UpdateConsolePage\";\n\nexport const allPages = { \n  HomePage, \n  DashBoard, \n  QuizList, \n  UpdateGamePage, \n  ShowGameByNamePage, \n  DeleteGamePage,\n  AddAndSeeAllCharacterPage,\n  DeleteCharacterPage,\n  ShowCharacterByNamePage,\n  UpdateCharacterPage,\n  AddAndSeeAllConsolesPage,\n  DeleteConsolePage,\n  ShowConsoleByNamePage,\n  ShowConsoleByPriceRangePage,\n  UpdateConsolePage\n  \n}","import AddNewConsole from \"../../components/consoles/AddNewConsole\";\nimport ConsoleList from \"../../components/consoles/ConsoleListe\";\nimport React from \"react\";\n\nconst AddAndSeeAllConsolesPage = () => {\n  return (\n      <section>\n          <AddNewConsole/>\n          <ConsoleList/>\n          \n      </section>\n  )\n}\n\nexport default AddAndSeeAllConsolesPage;","import DeleteConsole from \"../../components/consoles/DeleteConsole\";\nimport ConsoleList from \"../../components/consoles/ConsoleListe\";\n// import ArtifactList from \"../components/artifacts/ArtifactList\";\nimport React from \"react\";\nconst DeleteConsolePage = () => {\n  return (\n      <section>\n          <DeleteConsole/>\n          <ConsoleList/>\n      </section>\n  )\n}\n\nexport default DeleteConsolePage;","import SearchConsoleByName from \"../../components/consoles/SearchConsoleByName\";\nimport React from \"react\";\n\nconst ShowConsoleByNamePage = () => {\n  return (\n      <section>\n          <SearchConsoleByName/>\n      </section>\n  )\n}\n\nexport default ShowConsoleByNamePage;","import SearchConsolePriceRange from \"../../components/consoles/SearchConsolePriceRange\";\nimport React from \"react\";\n\nconst ShowConsoleByPriceRangePage = () => {\n  return (\n      <section>\n          <SearchConsolePriceRange/>\n      </section>\n  )\n}\n\nexport default ShowConsoleByPriceRangePage;","import UpdateConsole from \"../../components/consoles/UpdateConsole\";\nimport ConsoleList from \"../../components/consoles/ConsoleListe\";\nimport React from \"react\";\nconst UpdateConsolePage = () => {\n  return (\n      <section>\n          <UpdateConsole/>\n          <ConsoleList/>\n      </section>\n  )\n}\n\nexport default UpdateConsolePage;","import { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport { allPages } from \"./pages\";\nimport \"./css/Test.css\"\nimport \"./css/dropdown.css\"\nimport React from \"react\";\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n      <div className=\"body\">\n          <header>\n          <div className=\"h1_div\" id=\"background\">\n            <h1 className=\"h1\">ElectricGames</h1>\n            </div>\n            <div>\n            <article className=\"dropdown\">\n                <button className=\"dropbtn\">MyGames</button>\n                <div className=\"dropdown-content\">\n            <nav>\n              <ol className=\"ol\">\n                <li className=\"list\"><Link to=\"/\">Quiz</Link></li>\n                <li><Link to=\"/game-dashboard\">Game DashBoard</Link></li>\n                <li><Link to=\"/game-update\">Game Update</Link></li>\n                <li><Link to=\"/game-search\">Game Search</Link></li>\n                <li><Link to=\"/game-delete\">Game Delete</Link></li>\n              </ol>\n            </nav>\n            </div>\n            </article>\n            \n            <article className=\"dropdown\">\n                <button className=\"dropbtn\">MyCharacters</button>\n                <div className=\"dropdown-content\">\n            <nav>\n              <ol className=\"ol\">\n                <li className=\"list\"><Link to=\"/\">Quiz</Link></li>\n                <li><Link to=\"/character-see-all-and-add\">Character DashBoard</Link></li>\n                <li><Link to=\"/character-update\">Character Update</Link></li>\n                <li><Link to=\"/character-search\">Character Search</Link></li>\n                <li><Link to=\"/character-delete\">Character Delete</Link></li>\n              </ol>\n            </nav>\n            </div>\n            </article>\n            \n            <article className=\"dropdown\">\n                <button className=\"dropbtn\">MyConsoles</button>\n                <div className=\"dropdown-content\">\n            <nav>\n              <ol className=\"ol\">\n                <li className=\"list\"><Link to=\"/\">Quiz</Link></li>\n                <li><Link to=\"/console-see-all-and-add\">Console DashBoard</Link></li>\n                <li><Link to=\"/console-update\">Console Update</Link></li>\n                <li><Link to=\"/console-search-name\">Console Search by name</Link></li>\n                <li><Link to=\"/console-search-price\">Console Search by price</Link></li>\n                <li><Link to=\"/console-delete\">Console Delete</Link></li>\n              </ol>\n            </nav>\n            </div>\n            </article>\n            </div>\n          </header>\n\n          <main>\n              <Routes>\n                <Route path=\"/\" element={<allPages.HomePage/>}></Route>\n                <Route path=\"/game-dashboard\" element={<allPages.DashBoard/>}></Route>\n                <Route path=\"/game-update\" element={<allPages.UpdateGamePage/>}></Route>\n                <Route path=\"/game-search\" element={<allPages.ShowGameByNamePage/>}></Route>\n                <Route path=\"/game-delete\" element={<allPages.DeleteGamePage/>}></Route>\n                <Route path=\"/\" element={<allPages.HomePage/>}></Route>\n                <Route path=\"/character-see-all-and-add\" element={<allPages.AddAndSeeAllCharacterPage/>}></Route>\n                <Route path=\"/character-update\" element={<allPages.UpdateCharacterPage/>}></Route>\n                <Route path=\"/character-search\" element={<allPages.ShowCharacterByNamePage/>}></Route>\n                <Route path=\"/character-delete\" element={<allPages.DeleteCharacterPage/>}></Route>\n                <Route path=\"/\" element={<allPages.HomePage/>}></Route>\n                <Route path=\"/console-see-all-and-add\" element={<allPages.AddAndSeeAllConsolesPage/>}></Route>\n                <Route path=\"/console-update\" element={<allPages.UpdateConsolePage/>}></Route>\n                <Route path=\"/console-search-name\" element={<allPages.ShowConsoleByNamePage/>}></Route>\n                <Route path=\"/console-search-price\" element={<allPages.ShowConsoleByPriceRangePage/>}></Route>\n                <Route path=\"/console-delete\" element={<allPages.DeleteConsolePage/>}></Route>\n              </Routes>\n            \n          </main>\n          </div>\n      \n      </BrowserRouter>\n\n    \n    </>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GameProvider } from './contexts/GameContext'\nimport { CharacterProvider } from './contexts/CharacterContext'\nimport { ConsoleProvider } from './contexts/ConsoleContext'\n\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <ConsoleProvider>\n    <CharacterProvider>\n    <GameProvider>\n      <App />\n    </GameProvider>\n    </CharacterProvider>\n    </ConsoleProvider>\n  </React.StrictMode>\n   \n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}